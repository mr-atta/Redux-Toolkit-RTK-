{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst pokemonSlice = createSlice({\n  name: \"pokemon\",\n  initialState: [{\n    name: \"Picatchu\"\n  }],\n  reducers: {\n    add(state, action) {\n      state.push({\n        name: action.payload\n      });\n    },\n\n    remove(state, action) {\n      return state.filter(pokemon => pokemon.name !== action.payload);\n    }\n\n  }\n});\nexport const {\n  add,\n  remove\n} = pokemonSlice.actions;\nexport const get = () => async dispatch => {\n  const response = await fetch(\"https://pokeapi.co/api/v2/pokemon/\");\n  const pokemons = await response.json();\n  pokemons.results.forEach(pokemon => dispatch(add(pokemon.name)));\n};\nexport default pokemonSlice.reducer;","map":{"version":3,"sources":["/home/matta/401/part2/Redux-Toolkit-RTK-/src/store-rtk/pokemon.store.js"],"names":["createSlice","pokemonSlice","name","initialState","reducers","add","state","action","push","payload","remove","filter","pokemon","actions","get","dispatch","response","fetch","pokemons","json","results","forEach","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAGD,WAAW,CAAC;AAC/BE,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAE,CAAC;AAAED,IAAAA,IAAI,EAAE;AAAR,GAAD,CAFiB;AAG/BE,EAAAA,QAAQ,EAAE;AACRC,IAAAA,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACjBD,MAAAA,KAAK,CAACE,IAAN,CAAW;AAAEN,QAAAA,IAAI,EAAEK,MAAM,CAACE;AAAf,OAAX;AACD,KAHO;;AAIRC,IAAAA,MAAM,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACpB,aAAOD,KAAK,CAACK,MAAN,CAAcC,OAAD,IAAaA,OAAO,CAACV,IAAR,KAAiBK,MAAM,CAACE,OAAlD,CAAP;AACD;;AANO;AAHqB,CAAD,CAAhC;AAaA,OAAO,MAAM;AAAEJ,EAAAA,GAAF;AAAOK,EAAAA;AAAP,IAAkBT,YAAY,CAACY,OAArC;AAEP,OAAO,MAAMC,GAAG,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC3C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,CAA5B;AACA,QAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAvB;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAiBC,OAAjB,CAA0BT,OAAD,IAAaG,QAAQ,CAACV,GAAG,CAACO,OAAO,CAACV,IAAT,CAAJ,CAA9C;AACD,CAJM;AAMP,eAAeD,YAAY,CAACqB,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst pokemonSlice = createSlice({\n  name: \"pokemon\",\n  initialState: [{ name: \"Picatchu\" }],\n  reducers: {\n    add(state, action) {\n      state.push({ name: action.payload });\n    },\n    remove(state, action) {\n      return state.filter((pokemon) => pokemon.name !== action.payload);\n    },\n  },\n});\n\nexport const { add, remove } = pokemonSlice.actions;\n\nexport const get = () => async (dispatch) => {\n  const response = await fetch(\"https://pokeapi.co/api/v2/pokemon/\");\n  const pokemons = await response.json();\n  pokemons.results.forEach((pokemon) => dispatch(add(pokemon.name)));\n};\n\nexport default pokemonSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}